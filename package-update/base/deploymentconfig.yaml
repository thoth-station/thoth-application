---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: package-update-consumer
spec:
  replicas: 1
  selector:
    service: package-update-consumer
  template:
    metadata:
      labels:
        app: thoth
        component: package-update
        service: package-update-consumer
    spec:
      containers:
        - name: package-update-consumer
          imagePullPolicy: Always
          image: package-update-job
          env:
            - name: THOTH_USE_ARGO
              value: "1" # TODO refactor me in a new configmap
            - name: SUBCOMMAND
              value: "consumer"
            - name: DEBUG_LEVEL
              value: "0"
            - name: KUBERNETES_API_URL
              value: "https://kubernetes.default.svc.cluster.local"
            - name: KUBERNETES_VERIFY_TLS
              value: "0"
            - name: THOTH_HOST
              value: "khemenu.thoth-station.ninja"
            - name: THOTH_MIDDLETIER_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  key: middletier-namespace
                  name: thoth
            - name: THOTH_INFRA_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  key: infra-namespace
                  name: thoth
            - name: THOTH_DEPLOYMENT_NAME
              valueFrom:
                configMapKeyRef:
                  key: deployment-name
                  name: thoth
            - name: THOTH_S3_ENDPOINT_URL
              valueFrom:
                configMapKeyRef:
                  key: endpoint
                  name: ceph
            - name: THOTH_CEPH_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: bucket-name
                  name: ceph
            - name: THOTH_CEPH_BUCKET_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: bucket-prefix
                  name: ceph
            - name: KNOWLEDGE_GRAPH_HOST
              valueFrom:
                configMapKeyRef:
                  key: postgresql-host
                  name: thoth
            - name: KNOWLEDGE_GRAPH_PORT
              value: "5432"
            - name: KNOWLEDGE_GRAPH_SSL_DISABLED
              value: "1"
            - name: KNOWLEDGE_GRAPH_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-user
            - name: KNOWLEDGE_GRAPH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-password
            - name: KNOWLEDGE_GRAPH_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-name
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  key: kafka-bootstrap-servers
                  name: kafka
            - name: KAFKA_CAFILE
              value: "/mnt/secrets/kafka_ca.crt"
          ports:
            - containerPort: 8000
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "1"
            limits:
              memory: "512Mi"
              cpu: "1"
          volumeMounts:
            - name: secrets
              mountPath: /mnt/secrets
              readOnly: true
      volumes:
        - name: secrets
          secret:
            secretName: "kafka"
            items:
              - key: kafka_ca.crt
                path: kafka_ca.crt
  test: false
