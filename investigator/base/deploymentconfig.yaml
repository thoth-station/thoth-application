---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: investigator-consumer
spec:
  replicas: 1
  selector:
    service: investigator-consumer
    app.kubernetes.io/name: thoth
    app.kubernetes.io/component: investigator
    app.kubernetes.io/managed-by: aicoe-thoth-devops-argocd
  template:
    metadata:
      labels:
        service: investigator-consumer
        app.kubernetes.io/name: thoth
        app.kubernetes.io/component: investigator
        app.kubernetes.io/managed-by: aicoe-thoth-devops-argocd
    spec:
      serviceAccountName: investigator
      containers:
        - image: investigator
          name: investigator-consumer
          env:
            - name: SUBCOMMAND
              value: "consumer"
            - name: DEBUG_LEVEL
              value: "0"
            - name: APP_SCRIPT
              value: "app.sh"
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: kafka
                  key: kafka-bootstrap-servers
            - name: KAFKA_CAFILE
              value: "/mnt/secrets/kafka_ca.crt"
            - name: KNOWLEDGE_GRAPH_HOST
              valueFrom:
                configMapKeyRef:
                  name: thoth
                  key: postgresql-host
            - name: KNOWLEDGE_GRAPH_PORT
              value: "5432"
            - name: KNOWLEDGE_GRAPH_SSL_DISABLED
              value: "1"
            - name: KNOWLEDGE_GRAPH_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-user
            - name: KNOWLEDGE_GRAPH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-password
            - name: KNOWLEDGE_GRAPH_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-name
          volumeMounts:
            - name: secrets
              mountPath: /mnt/secrets
              readOnly: true
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            failureThreshold: 1
            # Give this consumer 2 hours to finish
            initialDelaySeconds: 7200
            periodSeconds: 10
            tcpSocket:
              port: 80
      volumes:
        - name: secrets
          secret:
            secretName: "kafka"
            items:
              - key: kafka_ca.crt
                path: kafka_ca.crt
  test: false
