apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: adviser
  annotations:
    description: "Thoth: Adviser"
    openshift.io/display-name: "Thoth: Adviser"
    tags: thoth,ai-stacks,adviser
    template.openshift.io/documentation-url: https://github.com/Thoth-Station/
    template.openshift.io/long-description: >
      This template defines resources needed to run recommendation logic of Thoth to OpenShift.
    template.openshift.io/provider-display-name: "Red Hat, Inc."
  labels:
    app: thoth
    template: adviser
    component: adviser

parameters:
  - name: THOTH_ADVISER_JOB_ID
    required: true
    description: A unique dentifier of adviser job.
    displayName: Adviser id
  - name: THOTH_ADVISER_REQUIREMENTS_FORMAT
    description: Format of input
    displayName: Requirements format
    value: "pipenv"
  - name: THOTH_ADVISER_RECOMMENDATION_TYPE
    description: Type of requested recommendation
    displayName: Recommendation type
  - name: THOTH_ADVISER_METADATA
    description: Metadata carried with the adviser request
    displayName: Adviser metadata
  - name: THOTH_ADVISER_PREDICTOR_CONFIG
    description: Predictor's configuration.
    displayName: Predictor's configuration.
    value: "{}"
  - name: THOTH_ADVISER_SEED
    required: true
    description: Random seed to run adviser with.
    displayName: Random seed
    # Keep seed constant across adviser runs so that two runs with same knowledge base report same results to user.
    # Not to answer with a different stack each time a request is made.
    value: "42"
  - name: THOTH_ADVISER_DEV
    required: true
    description: Consider also development dependencies.
    displayName: Dev dependencies
    value: "0"
  - name: THOTH_ADVISER_BEAM_WIDTH
    required: true
    description: Adviser's beam width to restrict memory requirements with states generated.
    displayName: Beam width
    value: "25000"
  - name: THOTH_LOG_ADVISER
    description: Log adviser actions
    displayName: Log adviser actions
    value: INFO
  - name: THOTH_ADVISER_LIMIT
    description: Limit number of software stacks scored.
    displayName: Adviser limit.
    value: "100000"
  - name: THOTH_ADVISER_COUNT
    description: Number of software stacks returned in the recommendation.
    displayName: Adviser count.
    value: "1"
  - name: THOTH_ADVISER_TIMEOUT_SECONDS
    required: true
    description: Give adviser specified number of seconds on CPU to compute results.
    displayName: Adviser timeout seconds.
    value: "1500"
  - name: THOTH_FORCE_SYNC
    description: Perform force sync - sync data even if they are reported to be existing
    displayName: Perform force sync
    required: true
    value: "0"

objects:
  - apiVersion: argoproj.io/v1alpha1
    kind: Workflow
    metadata:
      name: "${THOTH_ADVISER_JOB_ID}"
      labels:
        app: thoth
        component: adviser
    spec:
      serviceAccountName: argo
      activeDeadlineSeconds: 3000
      ttlStrategy:
        secondsAfterCompletion: 7200
        secondsAfterSuccess: 7200
        secondsAfterFailure: 7200
      entrypoint: adviser

      metrics:
        prometheus:
          - name: status_counter
            help: "Count of workflow by status"
            labels:
              - key: name
                value: adviser
              - key: status
                value: "{{workflow.status}}"
            counter:
              value: "1"

          - name: duration_seconds_histogram
            help: "Duration of workflow when succeded"
            when: "{{workflow.status}} == Succeeded"
            labels:
              - key: name
                value: adviser
            histogram:
              buckets:
                - 5
                - 10
                - 30
                - 60
                - 120
                - 180
                - 300
                - 600
                - 900
              value: "{{workflow.duration}}"

      arguments:
        parameters:
          - name: THOTH_ADVISER_JOB_ID
            value: "${THOTH_ADVISER_JOB_ID}"
          - name: THOTH_DOCUMENT_ID
            value: "${THOTH_ADVISER_JOB_ID}"
          - name: THOTH_LOG_ADVISER
            value: "${THOTH_LOG_ADVISER}"
          - name: THOTH_ADVISER_TIMEOUT_SECONDS
            value: "${THOTH_ADVISER_TIMEOUT_SECONDS}"
          - name: THOTH_ADVISER_REQUIREMENTS_FORMAT
            value: "${THOTH_ADVISER_REQUIREMENTS_FORMAT}"
          - name: THOTH_ADVISER_RECOMMENDATION_TYPE
            value: "${THOTH_ADVISER_RECOMMENDATION_TYPE}"
          - name: THOTH_ADVISER_METADATA
            value: "${THOTH_ADVISER_METADATA}"
          - name: THOTH_ADVISER_PREDICTOR_CONFIG
            value: "${THOTH_ADVISER_PREDICTOR_CONFIG}"
          - name: THOTH_ADVISER_DEV
            value: "${THOTH_ADVISER_DEV}"
          - name: THOTH_ADVISER_SEED
            value: "${THOTH_ADVISER_SEED}"
          - name: THOTH_ADVISER_BEAM_WIDTH
            value: "${THOTH_ADVISER_BEAM_WIDTH}"
          - name: THOTH_ADVISER_LIMIT
            value: "${THOTH_ADVISER_LIMIT}"
          - name: THOTH_ADVISER_COUNT
            value: "${THOTH_ADVISER_COUNT}"
          - name: THOTH_FORCE_SYNC
            value: "${THOTH_FORCE_SYNC}"
          - name: ceph_bucket_prefix
          - name: ceph_bucket_name
          - name: ceph_host
          - name: deployment_name

      volumes:
        - name: workdir
          emptyDir: {}
        - name: output
          emptyDir: {}
        - name: kafka-secrets
          secret:
            secretName: "kafka"
            items:
              - key: kafka_ca.crt
                path: kafka_ca.crt
        - name: ssh-config
          secret:
            secretName: kebechet
            items:
              - key: ssh-privatekey
                path: id_rsa
                mode: 0600

      templates:
        - name: "adviser"
          archiveLocation:
            archiveLogs: true
          dag:
            tasks:
              - name: "advise"
                templateRef:
                  name: "advise"
                  template: "advise"
                continueOn:
                  failed: true
                arguments:
                  parameters:
                    - name: THOTH_ADVISER_JOB_ID
                      value: "{{workflow.parameters.THOTH_ADVISER_JOB_ID}}"
                    - name: THOTH_DOCUMENT_ID
                      value: "{{workflow.parameters.THOTH_DOCUMENT_ID}}"
                    - name: THOTH_LOG_ADVISER
                      value: "{{workflow.parameters.THOTH_LOG_ADVISER}}"
                    - name: THOTH_ADVISER_REQUIREMENTS_FORMAT
                      value: "{{workflow.parameters.THOTH_ADVISER_REQUIREMENTS_FORMAT}}"
                    - name: THOTH_ADVISER_RECOMMENDATION_TYPE
                      value: "{{workflow.parameters.THOTH_ADVISER_RECOMMENDATION_TYPE}}"
                    - name: THOTH_ADVISER_PREDICTOR_CONFIG
                      value: "{{workflow.parameters.THOTH_ADVISER_PREDICTOR_CONFIG}}"
                    - name: THOTH_ADVISER_METADATA
                      value: "{{workflow.parameters.THOTH_ADVISER_METADATA}}"
                    - name: THOTH_ADVISER_SEED
                      value: "{{workflow.parameters.THOTH_ADVISER_SEED}}"
                    - name: THOTH_ADVISER_DEV
                      value: "{{workflow.parameters.THOTH_ADVISER_DEV}}"
                    - name: THOTH_ADVISER_BEAM_WIDTH
                      value: "{{workflow.parameters.THOTH_ADVISER_BEAM_WIDTH}}"
                    - name: THOTH_ADVISER_LIMIT
                      value: "{{workflow.parameters.THOTH_ADVISER_LIMIT}}"
                    - name: THOTH_ADVISER_COUNT
                      value: "{{workflow.parameters.THOTH_ADVISER_COUNT}}"
                    - name: THOTH_ADVISER_TIMEOUT_SECONDS
                      value: "{{workflow.parameters.THOTH_ADVISER_TIMEOUT_SECONDS}}"
                    - name: "THOTH_S3_ENDPOINT_URL"
                      value: "{{workflow.parameters.ceph_host}}"
                    - name: "THOTH_CEPH_BUCKET_NAME"
                      value: "{{workflow.parameters.ceph_bucket_name}}"
                    - name: "THOTH_CEPH_BUCKET_PREFIX"
                      value: "{{workflow.parameters.ceph_bucket_prefix}}"
                    - name: "THOTH_DEPLOYMENT_NAME"
                      value: "{{workflow.parameters.deployment_name}}"

              - name: "parse-adviser-output"
                dependencies:
                  - "advise"
                templateRef:
                  name: "parse-adviser-output"
                  template: "parse-adviser-output"
                arguments:
                  artifacts:
                    - name: outputdocument
                      from: "{{tasks.advise.outputs.artifacts.outputdocument}}"
                  parameters:
                    - name: "THOTH_DOCUMENT_ID"
                      value: "{{workflow.parameters.THOTH_DOCUMENT_ID}}"

              - name: "send-messages"
                dependencies:
                  - "parse-adviser-output"
                templateRef:
                  name: "send-messages"
                  template: "send-messages"
                arguments:
                  artifacts:
                    - name: messagesdocument
                      from: "{{tasks.parse-adviser-output.outputs.artifacts.messagestobesentdocument}}"
                  parameters:
                    - name: THOTH_MESSAGING_FROM_FILE
                      value: "/mnt/workdir/messages_to_be_sent.json"
                    - name: THOTH_DEPLOYMENT_NAME
                      value: "{{workflow.parameters.deployment_name}}"
                    - name: THOTH_MESSAGING_CREATE_IF_NOT_EXIST
                      value: "1"
                    - name: MESSAGES_DOCUMENT_NAME
                      value: "messages_to_be_sent.json"

              - name: "graph-sync-advise"
                dependencies:
                  - "advise"
                templateRef:
                  name: "graph-sync"
                  template: "graph-sync"
                arguments:
                  artifacts:
                    - name: outputdocument
                      from: "{{tasks.advise.outputs.artifacts.outputdocument}}"
                  parameters:
                    - name: "THOTH_DOCUMENT_ID"
                      value: "{{workflow.parameters.THOTH_DOCUMENT_ID}}"
                    - name: "THOTH_FORCE_SYNC"
                      value: "{{workflow.parameters.THOTH_FORCE_SYNC}}"

              - name: "trigger-integration"
                dependencies:
                  - "advise"
                templateRef:
                  name: "trigger-integration"
                  template: "trigger-integration"
                arguments:
                  parameters:
                    - name: "WORKFLOW_NAME"
                      value: "{{workflow.parameters.THOTH_ADVISER_JOB_ID}}"
                    - name: "THOTH_DOCUMENT_ID"
                      value: "{{workflow.parameters.THOTH_DOCUMENT_ID}}"
                    - name: "THOTH_ADVISER_METADATA"
                      value: "{{workflow.parameters.THOTH_ADVISER_METADATA}}"


              - name: "kebechet-run-results"
                dependencies:
                  - "trigger-integration"
                templateRef:
                  name: "kebechet-run-results"
                  template: "schedule-kebechet"
                arguments:
                  parameters:
                    - name: "WORKFLOW_NAME"
                      value: "{{workflow.parameters.THOTH_ADVISER_JOB_ID}}"
                    - name: "THOTH_DOCUMENT_ID"
                      value: "{{workflow.parameters.THOTH_DOCUMENT_ID}}"
                    - name: "THOTH_ADVISER_METADATA"
                      value: "{{workflow.parameters.THOTH_ADVISER_METADATA}}"
                    - name: metadata_origin
                      value: "{{tasks.trigger-integration.outputs.parameters.metadata_origin}}"
                    - name: git_service
                      value: "{{tasks.trigger-integration.outputs.parameters.git_service}}"
                when: "{{tasks.trigger-integration.outputs.parameters.source_type}} == KEBECHET"
