---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: provenance-check
  labels:
    app: thoth
    component: provenance-check
spec:
  templates:
    - name: provenance-check
      resubmitPendingPods: true
      inputs:
        parameters:
          - name: THOTH_PROVENANCE_CHECKER_JOB_ID
          - name: THOTH_DOCUMENT_ID
          - name: THOTH_WHITELISTED_SOURCES
          - name: THOTH_ADVISER_REQUIREMENTS
          - name: THOTH_ADVISER_REQUIREMENTS_LOCKED
          - name: THOTH_ADVISER_METADATA
          - name: THOTH_LOG_ADVISER
          - name: THOTH_S3_ENDPOINT_URL
          - name: THOTH_CEPH_BUCKET_NAME
          - name: THOTH_CEPH_BUCKET_PREFIX
          - name: THOTH_DEPLOYMENT_NAME
        artifacts:
          - name: inputdocument
            path: "/mnt/workdir/{{inputs.parameters.THOTH_DOCUMENT_ID}}.request"
            archive:
              none: {}
            s3:
              key: "{{inputs.parameters.THOTH_CEPH_BUCKET_PREFIX}}/\
              {{inputs.parameters.THOTH_DEPLOYMENT_NAME}}/\
              provenance-checker/{{inputs.parameters.THOTH_DOCUMENT_ID}}.request"
              endpoint: "{{inputs.parameters.THOTH_S3_ENDPOINT_URL}}"
              bucket: "{{inputs.parameters.THOTH_CEPH_BUCKET_NAME}}"
              insecure: true
              accessKeySecret:
                name: argo-artifact-repository-secrets
                key: accessKey
              secretKeySecret:
                name: argo-artifact-repository-secrets
                key: secretKey
      outputs:
        artifacts:
          - name: outputdocument
            path: "/mnt/workdir/{{inputs.parameters.THOTH_DOCUMENT_ID}}"
            archive:
              none: {}
            s3:
              key: "{{inputs.parameters.THOTH_CEPH_BUCKET_PREFIX}}/\
              {{inputs.parameters.THOTH_DEPLOYMENT_NAME}}/\
              provenance-checker/{{inputs.parameters.THOTH_DOCUMENT_ID}}"
              endpoint: "{{inputs.parameters.THOTH_S3_ENDPOINT_URL}}"
              bucket: "{{inputs.parameters.THOTH_CEPH_BUCKET_NAME}}"
              insecure: true
              accessKeySecret:
                name: argo-artifact-repository-secrets
                key: accessKey
              secretKeySecret:
                name: argo-artifact-repository-secrets
                key: secretKey
      container:
        name: provenance-check
        image: adviser
        env:
          - name: THOTH_PROVENANCE_CHECKER_JOB_ID
            value: "{{inputs.parameters.THOTH_PROVENANCE_CHECKER_JOB_ID}}"
          - name: THOTH_DOCUMENT_ID
            value: "{{inputs.parameters.THOTH_DOCUMENT_ID}}"
          - name: THOTH_ADVISER_ENABLE_PREPARE
            value: "1"
          - name: THOTH_WHITELISTED_SOURCES
            value: "{{inputs.parameters.THOTH_WHITELISTED_SOURCES}}"
          - name: THOTH_ADVISER_REQUIREMENTS
            value: "{{inputs.parameters.THOTH_ADVISER_REQUIREMENTS}}"
          - name: THOTH_ADVISER_REQUIREMENTS_LOCKED
            value: "{{inputs.parameters.THOTH_ADVISER_REQUIREMENTS_LOCKED}}"
          - name: THOTH_ADVISER_METADATA
            value: "{{inputs.parameters.THOTH_ADVISER_METADATA}}"
          - name: THOTH_LOG_ADVISER
            value: "{{inputs.parameters.THOTH_LOG_ADVISER}}"
          - name: THOTH_ADVISER_OUTPUT
            value: "/mnt/workdir/{{inputs.parameters.THOTH_DOCUMENT_ID}}"
          - name: THOTH_S3_ENDPOINT_URL
            value: "{{inputs.parameters.THOTH_S3_ENDPOINT_URL}}"
          - name: THOTH_CEPH_BUCKET_NAME
            value: "{{inputs.parameters.THOTH_CEPH_BUCKET_NAME}}"
          - name: THOTH_CEPH_BUCKET_PREFIX
            value: "{{inputs.parameters.THOTH_CEPH_BUCKET_PREFIX}}"
          - name: THOTH_DEPLOYMENT_NAME
            value: "{{inputs.parameters.THOTH_DEPLOYMENT_NAME}}"
          - name: THOTH_ADVISER_SUBCOMMAND
            value: "provenance"
          - name: PROMETHEUS_PUSHGATEWAY_URL
            valueFrom:
              configMapKeyRef:
                name: prometheus
                key: pushgateway-url
          - name: THOTH_DEPLOYMENT_NAME
            valueFrom:
              configMapKeyRef:
                name: thoth
                key: storage-bucket-name
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: thoth
                key: sentry-dsn
          - name: KNOWLEDGE_GRAPH_HOST
            valueFrom:
              configMapKeyRef:
                name: thoth
                key: postgresql-host
          - name: KNOWLEDGE_GRAPH_PORT
            value: "5432"
          - name: KNOWLEDGE_GRAPH_SSL_DISABLED
            value: "1"
          - name: KNOWLEDGE_GRAPH_USER
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: database-user
          - name: KNOWLEDGE_GRAPH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: database-password
          - name: KNOWLEDGE_GRAPH_DATABASE
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: database-name
        volumeMounts:
          - name: output
            mountPath: /mnt/workdir
        resources:
          limits:
            cpu: 1.1
            memory: 8Gi
          requests:
            cpu: 1.1
            memory: 8Gi
        livenessProbe:
          # Give adviser some seconds to compute results
          exec:
            command:
              - python3
              - liveness.py
          failureThreshold: 1
          initialDelaySeconds: 1500
          # Give main process some time to finish scoring and submit results.
          timeoutSeconds: 600
